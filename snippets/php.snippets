snippet php
	<?php
	${1}
	?>
snippet pecho
	echo "${1:string}"${2};
snippet pinc
	include '${1:file}';${2}
snippet pinc1
	include_once '${1:file}';${2}
snippet preq
	require '${1:file}';${2}
snippet preq1
	require_once '${1:file}';${2}
# $GLOBALS['...']
snippet pglobals
	$GLOBALS['${1:variable}']${2: = }${3:'something'}${4:;}${5}
snippet pcookie 
	$_COOKIE['${1:variable}']${2:;}${3}
snippet pcookiev 
	$_COOKIE['${1:variable}']${2: = }${3:''}${4:;}${5}
snippet penv 
	$_ENV['${1:variable}']${2:;}${3}
snippet penvv 
	$_ENV['${1:variable}']${2: = }${3:''}${4:;}${5}
snippet pfiles 
	$_FILES['${1:variable}']${2:;}${3}
snippet pfilesv 
	$_FILES['${1:variable}']${2: = }${3:''}${4:;}${5}
snippet pget 
	$_GET['${1:variable}']${2:;}${3}
snippet pgetv 
	$_GET['${1:variable}']${2: = }${3:''}${4:;}${5}
snippet ppost 
	$_POST['${1:variable}']${2:;}${3}
snippet ppostv 
	$_POST['${1:variable}']${2: = }${3:''}${4:;}${5}
snippet preq 
	$_REQUEST['${1:variable}']${2:;}${3}
snippet preqv 
	$_REQUEST['${1:variable}']${2: = }${3:''}${4:;}${5}
snippet pser 
	$_SERVER['${1:variable}']${2:;}${3}
snippet pserv 
	$_SERVER['${1:variable}']${2: = }${3:''}${4:;}${5}
snippet psess 
	$_SESSION['${1:variable}']${2:;}${3}
snippet psessv 
	$_SESSION['${1:variable}']${2: = }${3:''}${4:;}${5}

# Start Docblock
snippet /*
	/**
	 * ${1}
	 */
# Class
snippet pdocc
	/**
	 * ${1}
	 *
	 * @version ${4:1.0}
	 * @author ${5:`g:snips_author`}
	 */
# Function doc 
snippet pdocf
	/**
	 * ${1} 
	 * 
	 * @param ${6}
	 * @return ${5}
	 * @author ${8:`g:snips_author`}
	 */
# Header doc
snippet pdoch
	/**
	 * ${1}
	 *
	 * @author ${2:`g:snips_author`}
	 * @version ${3:1.0}
	 */
	
	/**
	 * Define DocBlock
	 *//

snippet pinterface 
	/**
	 * ${2:undocumented interface}
	 *
	 * @package ${3:default}
	 * @author ${4:`g:snips_author`}
	 **/
	interface ${1:interfaceName}
	{${5}
		${6}
	}
# class ...
snippet pclass
	/**
	 * ${3:undocumented class}
	 *
	 * @package ${8:default}
	 * @author ${7:`g:snips_author`}
	 */
	class ${1:ClassName}
	{
		${3}
		function ${4:__construct}(${5})
		{
			${6}
		}
	}
# define(...)
snippet pdef
	// ${3}
	define('${1}', '${2}');${3}
# defined(...)
snippet pdefd
	// ${4}
	defined('${1}')${3} or define('${2}', '${5}');${6}
snippet pwhile
	while (${1}) {
		${2}
	}
# do ... while
snippet pdo
	do {
		${2}
	} while (${1});
snippet pif
	if (${1}) {
		${2}
	}
snippet pife
	if (${1}) {
		${2}
	} else {
		${3}
	}
	${4}
snippet pelse
	else {
		${1}
	}
snippet pelseif
	elseif (${1}) {
		${2}
	}
# Tertiary conditional
snippet pt
	$${1:retVal} = ${2:condition} ? ${3:a} : ${4:b};${5}
snippet ptt 
	$${1:retVal} = $${2:retVal} ?? ${3:a};${5}
snippet pswitch
	switch ($${1:variable}) {
		case '${2:value}':
			${3}
			break;
		${5}
		default:
			${4}
			break;
	}
snippet pcase
	case '${1:value}':
		${2}
		break;${3}
snippet pfor
	for ($${2:i} = 0; $$2 < $${1:count}; $$2${3:++}) {
		${4}
	}
snippet pforeach
	foreach ($${1} as $${2}) {
		${3}
	}
snippet pfun
	/**
	 * @Purpose:
	 * ${7} 
	 * 
	 * @param ${6}
	 * @return ${5}
	 * User: ${8:`g:snips_author`}
	 * Date: ${9:`g:snips_date`} 
	 * Time: ${10:`g:snips_time`} 
	 */
	function ${1:func_name}()
	{
		${4}
	}
snippet pfuns
	/**
	 * @Purpose:
	 * ${7} 
	 * 
	 * @param ${6}
	 * @return ${5}
	 * @throws \Throwable
	 * User: ${8:`g:snips_author`}
	 * Date: ${9:`g:snips_date`} 
	 * Time: ${10:`g:snips_time`} 
	 */
	function ${1:func_name}(); ${4}
snippet pubfun
	/**
	 * @Purpose:
	 * ${1} 
	 * 
	 * @param ${6}
	 * @return ${5}
	 * @throws \Throwable
	 * User: ${8:`g:snips_author`}
	 * Date: ${9:`g:snips_date`} 
	 * Time: ${10:`g:snips_time`} 
	 */
	${2:public }function ${1:FunctionName}(${3})
	{
		${4}
	}
snippet pubfuns
	/**
	 * @Purpose:
	 * ${7} 
	 * 
	 * @param ${6}
	 * @return ${5}
	 * @throws \Throwable
	 * User: ${8:`g:snips_author`}
	 * Date: ${9:`g:snips_date`} 
	 * Time: ${10:`g:snips_time`} 
	 */
	${2:public }function ${1:func_name}(); ${4}
snippet pubstafun
	/**
	 * @Purpose:
	 * ${7} 
	 * 
	 * @param ${6}
	 * @return ${5}
	 * @throws \Throwable
	 * User: ${8:`g:snips_author`}
	 * Date: ${9:`g:snips_date`} 
	 * Time: ${10:`g:snips_time`} 
	 */
	${2:public static }function ${1:FunctionName}(${3})
	{
		${4}
	}
snippet prifun
	/**
	 * @Purpose:
	 * ${7} 
	 * 
	 * @param ${6}
	 * @return ${5}
	 * @throws \Throwable
	 * User: ${8:`g:snips_author`}
	 * Date: ${9:`g:snips_date`} 
	 * Time: ${10:`g:snips_time`} 
	 */
	${2:private }function ${1:FunctionName}(${3})
	{
		${4}
	}
snippet pristafun
	/**
	 * @Purpose:
	 * ${7} 
	 * 
	 * @param ${6}
	 * @return ${5}
	 * @throws \Throwable
	 * User: ${8:`g:snips_author`}
	 * Date: ${9:`g:snips_date`} 
	 * Time: ${10:`g:snips_time`} 
	 */
	${2:private static }function ${1:FunctionName}(${3})
	{
		${4}
	}
snippet profun
	/**
	 * @Purpose:
	 * ${7} 
	 * 
	 * @param ${6}
	 * @return ${5}
	 * @throws \Throwable
	 * User: ${8:`g:snips_author`}
	 * Date: ${9:`g:snips_date`} 
	 * Time: ${10:`g:snips_time`} 
	 */
	${2:protected }function ${1:FunctionName}(${3})
	{
		${4}
	}
snippet prostafun
	/**
	 * @Purpose:
	 * ${7} 
	 * 
	 * @param ${6}
	 * @return ${5}
	 * @throws \Throwable
	 * User: ${8:`g:snips_author`}
	 * Date: ${9:`g:snips_date`} 
	 * Time: ${10:`g:snips_time`} 
	 */
	${2:protected static }function ${1:FunctionName}(${3})
	{
		${4}
	}
# $... = array (...)
# $... = array (...)
snippet parray
	$${1:arrayName} = [
		'${2}' => '${3}' ${4:,}
	];${5}


snippet ptry
	try {
		${1}	
	} catch (\Exception $e) {
		echo $e->getMessage();
	}


snippet peof
	echo <<<EOF
	${1}
	EOF;

snippet return 
	return ${1};

snippet pprint 
	print_r(${1});

snippet pvar
	var_dump(${1});

snippet pjsone 
	json_encode(${1});

snippet pjsond 
	json_decode(${1}, true);

snippet pechoerror 
	echo $e->message(), $e->getFile() , $e->getLine();	

