snippet php
	<?php
	${1}
	?>
snippet pec
	echo "${1:string}"${2};
snippet pinc
	include '${1:file}';${2}
snippet pinc1
	include_once '${1:file}';${2}
snippet preq
	require '${1:file}';${2}
snippet preq1
	require_once '${1:file}';${2}
# $GLOBALS['...']
snippet pglobals
	$GLOBALS['${1:variable}']${2: = }${3:'something'}${4:;}${5}
snippet pcookie 
	$_COOKIE['${1:variable}']${2:;}${3}
snippet pcookie= 
	$_COOKIE['${1:variable}']${2: = }${3:''}${4:;}${5}
snippet penv 
	$_ENV['${1:variable}']${2:;}${3}
snippet penv= 
	$_ENV['${1:variable}']${2: = }${3:''}${4:;}${5}
snippet pfiles 
	$_FILES['${1:variable}']${2:;}${3}
snippet pfiles= 
	$_FILES['${1:variable}']${2: = }${3:''}${4:;}${5}
snippet pget 
	$_GET['${1:variable}']${2:;}${3}
snippet pget= 
	$_GET['${1:variable}']${2: = }${3:''}${4:;}${5}
snippet ppost 
	$_POST['${1:variable}']${2:;}${3}
snippet ppost= 
	$_POST['${1:variable}']${2: = }${3:''}${4:;}${5}
snippet preq 
	$_REQUEST['${1:variable}']${2:;}${3}
snippet preq= 
	$_REQUEST['${1:variable}']${2: = }${3:''}${4:;}${5}
snippet pser 
	$_SERVER['${1:variable}']${2:;}${3}
snippet pser= 
	$_SERVER['${1:variable}']${2: = }${3:''}${4:;}${5}
snippet psess 
	$_SESSION['${1:variable}']${2:;}${3}
snippet psess= 
	$_SESSION['${1:variable}']${2: = }${3:''}${4:;}${5}

# Start Docblock
snippet /*
	/**
	 * ${1}
	 **/
# Class - post doc
snippet doc_cp
	/**
	 * ${1:undocumented class}
	 *
	 * @package ${2:default}
	 * @author ${3:`g:snips_author`}
	**/${4}
# Class Variable - post doc
snippet doc_vp
	/**
	 * ${1:undocumented class variable}
	 *
	 * @var ${2:string}
	 **/${3}
# Class Variable
snippet doc_v
	/**
	 * ${3:undocumented class variable}
	 *
	 * @var ${4:string}
	 **/
	${1:var} $${2};${5}
# Class
snippet doc_c
	/**
	 * ${3:undocumented class}
	 *
	 * @packaged ${4:default}
	 * @author ${5:`g:snips_author`}
	 **/
	${1:}class ${2:ClassName}
	{${6}
	}
# Constant Definition - post doc
snippet doc_dp
	/**
	 * ${1:undocumented constant}
	 **/${2}
# Constant Definition
snippet doc_d
	/**
	 * ${3:undocumented constant}
	 **/
	define(${1}, ${2});${4}
# Function - post doc
snippet doc_fp
	/**
	 * ${1:undocumented function}
	 *
	 * @return ${2:void}
	 * @author ${3:`g:snips_author`}
	 **/${4}
# Function signature
snippet doc_s
	/**
	 * ${4:undocumented function}
	 *
	 * @return ${5:void}
	 * @author ${6:`g:snips_author`}
	 **/
	${1}function ${2}(${3});${7}
# Function
snippet doc_f
	/**
	 * ${4:undocumented function}
	 *
	 * @return ${5:void}
	 * @author ${6:`g:snips_author`}
	 **/
	${1}function ${2}(${3})
	{${7}
	}
# Header
snippet doc_h
	/**
	 * ${1}
	 *
	 * @author ${2:`g:snips_author`}
	 * @version ${3:$Id$}
	 * @copyright ${4:$2}, `strftime('%d %B, %Y')`
	 * @package ${5:default}
	 **/
	
	/**
	 * Define DocBlock
	 *//
# Interface
snippet doc_i
	/**
	 * ${2:undocumented interface}
	 *
	 * @package ${3:default}
	 * @author ${4:`g:snips_author`}
	 **/
	interface ${1:interfaceName}
	{${5}
		${6}
	}
snippet pinter 
	interface ${1:interfaceName}
	{${5}
		${6}
	}
# class ...
snippet pclass
	class ${2:ClassName}
	{
		${3}
		function ${4:__construct}(${5:$argument})
		{
			${6:// code...}
		}
	}
# define(...)
snippet pdef
	define('${1}'${2});${3}
# defined(...)
snippet pdef?
	${1}defined('${2}')${3} or define('${4}', '${5}');${6}
snippet pwh
	while (${1}) {
		${2:// code...}
	}
# do ... while
snippet pdo
	do {
		${2:// code... }
	} while (${1});
snippet pif
	if (${1}) {
		${2:// code...}
	}
snippet pife
	if (${1}) {
		${2:// code...}
	} else {
		${3:// code...}
	}
	${4}
snippet pelse
	else {
		${1:// code...}
	}
snippet pelseif
	elseif (${1}) {
		${2:// code...}
	}
# Tertiary conditional
snippet pt
	$${1:retVal} = ${2:condition} ? ${3:a} : ${4:b};${5}
snippet pswitch
	switch ($${1:variable}) {
		case '${2:value}':
			${3:// code...}
			break;
		${5}
		default:
			${4:// code...}
			break;
	}
snippet pcase
	case '${1:value}':
		${2:// code...}
		break;${3}
snippet pfor
	for ($${2:i} = 0; $$2 < ${1:count}; $$2${3:++}) {
		${4: // code...}
	}
snippet pforeach
	foreach ($${1:key} as $${2:value}) {
		${3:// code...}
	}
snippet pfun
	function ${2:func_name}()
	{
		${4:// code...}
	}
snippet pubfun
	${1:public }function ${2:FunctionName}(${3})
	{
		${4:// code...}
	}
snippet pubstafun
	${1:public static }function ${2:FunctionName}(${3})
	{
		${4:// code...}
	}
snippet prifun
	${1:private }function ${2:FunctionName}(${3})
	{
		${4:// code...}
	}
snippet pristafun
	${1:private static }function ${2:FunctionName}(${3})
	{
		${4:// code...}
	}
snippet profun
	${1:protected }function ${2:FunctionName}(${3})
	{
		${4:// code...}
	}
snippet prostafun
	${1:protected static }function ${2:FunctionName}(${3})
	{
		${4:// code...}
	}
# $... = array (...)
# $... = array (...)
snippet parray
	${1:$arrayName} = [
		'${2}' => '${3}' ${4:,}
	];${5}


snippet ptry
	try {
	
	} catch (\Exception $e) {
		echo $e->getMessage();
	}

snippet peof
	echo <<<EOF
	EOF;
